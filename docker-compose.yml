version: "3.8"

services:
  frontend:
    container_name: voting_sections_frontend
    build: ./frontend
    ports:
      - '3000:3000'
  database:
    container_name: voting_sections_database
    image: postgres:12
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: doctorwho3210
      POSTGRES_DB: voting_sections
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d voting_sections"]
      start_period: 10s
      interval: 10s
      timeout: 10s
      retries: 5
  backend:
    container_name: voting_sections_backend
    build: ./backend
    ports:
      - "5000:5000"
    environment:
      DATABASE_URL: "host=database user=postgres password=doctorwho3210 dbname=voting_sections port=5432"
      PORT: 5000
      GOOSE_DRIVER: postgres
      GOOSE_DBSTRING: postgresql://postgres:doctorwho3210@database:5432/voting_sections
      GOOSE_MIGRATION_DIR: ./migrations
      GOOSE_TABLE: public.migrations
    depends_on:
      database:
        condition: service_healthy
    command: sh -c "goose up && go run . "

volumes:  
  pgdata: {}